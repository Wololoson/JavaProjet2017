package be.wilson.ClubVeloDAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import be.wilson.ClubVeloPOJO.Adresse;
import be.wilson.ClubVeloPOJO.Membre;

public class AdresseDAO extends DAO<Adresse> {
	public AdresseDAO(Connection conn){
		super(conn);
	}
	
	public boolean create(Membre obj){
		PreparedStatement stmt = null;
		long idPers = 0;
		long idAdr = 0;
		try{
			stmt = connect.prepareStatement("INSERT INTO Adresse(rue, numero, codePost, ville, pays)"
										  + "VALUES(?, ?, ?, ?, ?)");
			stmt.setString(1, obj.getAdr().getRue());
			stmt.setInt(2, obj.getAdr().getNum());
			stmt.setString(3, obj.getAdr().getCodePost());
			stmt.setString(4, obj.getAdr().getVille());
			stmt.setString(5, obj.getAdr().getPays());
			stmt.executeUpdate();
			
			idAdr = stmt.getGeneratedKeys().getLong(1);
			stmt = connect.prepareStatement("INSERT INTO Personne(nom, prenom, dateNaiss, idAdr)"
										  + "VALUES(?, ?, ?, ?)");
			stmt.setString(1, obj.getNom());
			stmt.setString(2, obj.getPrenom());
			stmt.setDate(3, obj.getDateNaiss());
			stmt.setLong(4, idAdr);
			stmt.executeUpdate();
			
			idPers = stmt.getGeneratedKeys().getLong(1);
			stmt = connect.prepareStatement("INSERT INTO Membre(idPers, cotisation)"
					  					  + "VALUES(?, ?)");
			stmt.setLong(1, idPers);
			stmt.setFloat(2, obj.getCotisation());
			stmt.executeUpdate();
			return true;
		}
		catch(SQLException e){
			System.out.println(e.getMessage());
		}
		return false;
	}
	
	public boolean delete(Membre obj){
		return false;
	}
	
	public boolean update(Membre obj){
		return false;
	}
	
	public Membre find(int id){
		Membre membre = new Membre();
		Adresse adr = null;
		try{
			ResultSet resultPers = this.connect.createStatement(
					ResultSet.TYPE_SCROLL_INSENSITIVE,
					ResultSet.CONCUR_READ_ONLY).executeQuery("SELECT * FROM Personne"
														   + "INNER JOIN Membre WHERE ipPers = " + id);
			if(resultPers.first()){
				ResultSet resultAdr = this.connect.createStatement(
						ResultSet.TYPE_SCROLL_INSENSITIVE,
						ResultSet.CONCUR_READ_ONLY).executeQuery("SELECT * FROM Adresse"
															   + "WHERE idAdr = " + resultPers.getLong("idAdr"));
				adr = new Adresse(resultAdr.getLong("idAdr"), resultAdr.getString("rue"), resultAdr.getInt("numero"), resultAdr.getString("codePost"), resultAdr.getString("ville"), resultAdr.getString("pays"));
				membre = new Membre(id, resultPers.getString("nom"), resultPers.getString("prenom"), resultPers.getDate("dateNaiss"), adr, resultPers.getFloat("cotisation"));
			}
		}
		catch(SQLException e){
			e.printStackTrace();
		}
		return membre;
	}
}
